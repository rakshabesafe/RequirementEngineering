from sqlalchemy import Column, Integer, String, DateTime, UniqueConstraint
from sqlalchemy.sql import func
from .database import Base

class ArtifactMapping(Base):
    """
    Stores the mapping between an internal artifact ID and its corresponding
    ID in an external system like Jira.
    """
    __tablename__ = "artifact_mappings"

    id = Column(Integer, primary_key=True, index=True)

    # A unique ID generated by the source service (e.g., a UUID for a requirement)
    internal_id = Column(String, index=True, nullable=False)

    # The ID from the external tool (e.g., Jira issue key "PROJ-123" or ID "10001")
    external_id = Column(String, index=True, nullable=False)

    # The key or ID of the external entity's container (e.g., Jira Project Key "PROJ")
    external_parent_id = Column(String, index=True)

    # The service that originated the artifact (e.g., 'requirements-agent-service')
    source_service = Column(String, nullable=False)

    # The external tool it's synced with (e.g., 'jira', 'trello')
    external_tool = Column(String, nullable=False, default="jira")

    created_at = Column(DateTime(timezone=True), server_default=func.now())

    __table_args__ = (
        UniqueConstraint('internal_id', 'external_tool', name='_internal_id_tool_uc'),
        UniqueConstraint('external_id', 'external_tool', name='_external_id_tool_uc'),
    )
